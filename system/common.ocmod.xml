<?xml version="1.0" encoding="UTF-8"?>
<modification>
	<name>Yourstore changes</name>
	<version>2.2.0.0</version>
	<code>yourstore</code>
	<author>tonytheme</author>

    <!--testimonials admin-->
    <file path="admin/controller/common/column_left.php">
        <operation>
            <search trim="true" index="0"><![CDATA[ if ($report) { ]]></search>
            <add position="before" trim="false" offset="0"><![CDATA[
            $data['menus'][] = array(
				'id'       => 'menu-testimonials',
				'icon'	   => 'fa-sticky-note',
				'name'	   => $this->language->get('text_testimonials_parent'),
				'href'     => $this->url->link('testimonials/testimonials', 'token=' . $this->session->data['token'], true),
				'children' => array()
			);
            ]]></add>
        </operation>
    </file>
    <file path="admin/language/en-gb/common/column_left.php">
        <operation>
            <search trim="true" index="0"><![CDATA[<?php]]></search>
            <add position="after" trim="false" offset="0"><![CDATA[$_['text_testimonials_parent']              = 'Testimonials';]]></add>
        </operation>
    </file>
    <!--//testimonials admin-->

    <!--testimonials seo-->
    <file path="catalog/controller/startup/seo_url.php">
        <operation>
            <search trim="true" index="0"><![CDATA[$this->request->get['route'] = 'error/not_found';]]></search>
            <add position="replace" trim="false" offset="0"><![CDATA[$this->request->get['route'] = 'testimonials/testimonials_seo';]]></add>
        </operation>
    </file>
    <!--//testimonials seo-->

    <!--Simple Blog admin-->
    <file path="admin/controller/common/column_left.php">
        <operation>
            <search><![CDATA[if ($report) {]]></search>
            <add position="before"><![CDATA[
							// Simple Blog
			$simpleblog = array();

			if ($this->user->hasPermission('access', 'simple_blog/author')) {
				$simpleblog[] = array(
					'name'	   => $this->language->get('text_simple_blog_author'),
					'href'     => $this->url->link('simple_blog/author', 'token=' . $this->session->data['token'], true),
					'children' => array()
				);
			}

			if ($this->user->hasPermission('access', 'simple_blog/article')) {
				$simpleblog[] = array(
					'name'	   => $this->language->get('text_simple_blog_article'),
					'href'     => $this->url->link('simple_blog/article', 'token=' . $this->session->data['token'], true),
					'children' => array()
				);
			}

			if ($this->user->hasPermission('access', 'simple_blog/category')) {
				$simpleblog[] = array(
					'name'	   => $this->language->get('text_simple_blog_category'),
					'href'     => $this->url->link('simple_blog/category', 'token=' . $this->session->data['token'], true),
					'children' => array()
				);
			}

			if ($this->user->hasPermission('access', 'simple_blog/comment')) {
				$simpleblog[] = array(
					'name'	   => $this->language->get('text_simple_blog_article_comment'),
					'href'     => $this->url->link('simple_blog/comment', 'token=' . $this->session->data['token'], true),
					'children' => array()
				);
			}

			if ($this->user->hasPermission('access', 'simple_blog/report')) {
				$simpleblog[] = array(
					'name'	   => $this->language->get('text_simple_blog_view_report'),
					'href'     => $this->url->link('simple_blog/report', 'token=' . $this->session->data['token'], true),
					'children' => array()
				);
			}


			$simpleblogsettings = array();
			if ($this->user->hasPermission('access', 'extension/module/simple_blog')) {
				$simpleblogsettings[] = array(
					'name'	   => $this->language->get('text_simple_blog_general_setting'),
					'href'     => $this->url->link('extension/module/simple_blog', 'token=' . $this->session->data['token'], true),
					'children' => array()
				);
			}

			if ($this->user->hasPermission('access', 'extension/module/simple_blog_category')) {
				$simpleblogsettings[] = array(
					'name'	   => $this->language->get('text_simple_blog_category_setting'),
					'href'     => $this->url->link('extension/module/simple_blog_category', 'token=' . $this->session->data['token'], true),
					'children' => array()
				);
			}


			if ($simpleblogsettings) {
				$simpleblog[] = array(
					'name'	   => $this->language->get('text_simple_blog_setting'),
					'href'     => '',
					'children' => $simpleblogsettings
				);
			}

			if ($simpleblog) {
				$data['menus'][] = array(
					'id'       => 'menu-simpleblog',
					'icon'	   => 'fa-file-text-o',
					'name'	   => $this->language->get('text_simple_blogs'),
					'href'     => '',
					'children' => $simpleblog
				);
			}
			]]></add>
        </operation>
    </file>
    <file path="admin/language/*/common/column_left.php">
        <operation>
            <search><![CDATA[<?php]]></search>
            <add position="after"><![CDATA[
				$_['text_simple_blogs']	= 'Simple Blog';
				$_['text_simple_blog_author']	= 'Author';
				$_['text_simple_blog_category']	= 'Category';
				$_['text_simple_blog_article']	= 'Article';
				$_['text_simple_blog_article_comment']	= 'Article Comment';
				$_['text_simple_blog_setting'] = 'Setting';
				$_['text_simple_blog_general_setting'] = 'General Setting';
				$_['text_simple_blog_category_setting'] = 'Category Setting';
				$_['text_simple_blog_view_report'] = 'Report';
			]]></add>
        </operation>
    </file>
    <!--end Simple Blog admin-->


    <!--admin changes-->
    <file path="admin/controller/common/column_left.php">
        <operation>
            <search><![CDATA[$this->url->link('catalog/category', 'token=' . $this->session->data['token'], true)]]></search>
            <add position="replace"><![CDATA[$this->url->link('catalog/mcategory', 'token=' . $this->session->data['token'], true)]]></add>
        </operation>
        <operation>
            <search><![CDATA[$this->url->link('catalog/product', 'token=' . $this->session->data['token'], true)]]></search>
            <add position="replace"><![CDATA[$this->url->link('catalog/mproduct', 'token=' . $this->session->data['token'], true)]]></add>
        </operation>
    </file>
    <!--end admin changes-->

    <!--catalog controllers changes-->
    <file path="catalog/controller/error/not_found.php">
        <operation>
            <search><![CDATA[public function index() { ]]></search>
            <add position="after"><![CDATA[
            /* theme's changes */
            $this->load->model('custom/general');
            $data['layout_id'] = $this->model_custom_general->getCurrentLayout();
                    ]]></add>
        </operation>
    </file>

    <!--catalog/controller/common-->
    <file path="catalog/controller/common/header.php">
        <operation>
            <search><![CDATA[$this->load->model('catalog/category');]]></search>
            <add position="after"><![CDATA[
            /* theme's changes */
                            $this->load->model('custom/general');
                $customisation_translation = $this->config->get('customisation_translation_store');
                $store_id = $this->config->get('config_store_id');
                $langs = $this->config->get('config_language_id');
                $theme = $this->config->get('config_theme');
            /* end theme's changes */
                    ]]></add>
        </operation>

        <operation>
            <search><![CDATA[ if ($category['top']) { ]]></search>
            <add position="after"><![CDATA[
            /***theme's changes***/
                $category_top_level = $this->model_custom_general->getOptionByCategoryId($category['category_id']);
                $product_right_slider = $this->model_custom_general->getOption1ByCategoryId($category['category_id'],'ctop');
                $product_slider_type = $this->model_custom_general->getOption1ByCategoryId($category['category_id'],'vtop');

                $product_width = $this->config->get($theme.'_image_product_width');
                $product_height = $this->config->get($theme.'_image_product_height');
                $title = isset($customisation_translation[$langs]["dd_title"][$store_id]) && $customisation_translation[$langs]["dd_title"][$store_id] != '' ? $customisation_translation[$langs]["dd_title"][$store_id] : 'Latest';

                $category_href = $this->url->link('product/category', 'path=' . $category['category_id']);
                $category_menu_slider = $this->model_custom_general->renderProductsList($product_slider_type, $title, $category['category_id'], $category_href, $product_width, $product_height);

                /***end theme's changes***/
                    ]]></add>
        </operation>
        <operation>
            <search><![CDATA[foreach ($children as $child) {]]></search>
            <add position="after"><![CDATA[
                    /***theme's changes***/
                    $grandchildren_data = array();
                    $grandchildren = $this->model_catalog_category->getCategories($child['category_id']);
                    $category_sub_level = $this->model_custom_general->getOptionByCategoryId($child['category_id']);

                    foreach ($grandchildren as $grandchild) {

                    /*very new*/
                        $grandchildren_data2 = array();
                        $grandchildren2 = $this->model_catalog_category->getCategories($grandchild['category_id']);

                        foreach ($grandchildren2 as $grandchild2) {
                            $grandchildren_data2[] = array(
                                'name'  => $grandchild2['name'],
                                'href'  => $this->url->link('product/category', 'path=' . $category['category_id'] . '_' . $child['category_id'].'_'.$grandchild['category_id'].'_'.$grandchild2['category_id'])
                            );
                        }

                        //var_dump($grandchildren_data2);
                    /*very new*/

                        $grandchildren_data[] = array(
                        /*very new*/
                            'grandchildren2' => $grandchildren_data2,
                        /*very new*/

                            'name'  => $grandchild['name'],
                            'href'  => $this->url->link('product/category', 'path=' . $category['category_id'] . '_' . $child['category_id'].'_'.$grandchild['category_id'])
                        );

                    }
                    /***end theme's changes***/

                    ]]></add>
        </operation>
        <operation>
            <search><![CDATA[$children_data[] = array( ]]></search>
            <add position="after"><![CDATA[
                        /***theme's changes***/
                        'grandchildren' => $grandchildren_data,
                        'category_sub_level' => $category_sub_level,
                        /***end theme's changes***/

                    ]]></add>
        </operation>
        <operation>
            <search><![CDATA['name'     => $category['name'], ]]></search>
            <add position="after"><![CDATA[
                    /***theme's changes***/
                    'category_top_level' => $category_top_level,
                    'product_right_slider' => $product_right_slider,
                    'category_menu_slider' => $category_menu_slider,
                    'category_class' => $this->model_custom_general->getBlogCatClass($children_data),
                    /***end theme's changes***/

                    ]]></add>
        </operation>
        <operation>
            <search><![CDATA[ return $this->load->view('common/header', $data);]]></search>
            <add position="before"><![CDATA[
        /***theme's changes***/
        $data['config_telephone'] = $this->config->get('config_telephone');
        $data['config_fax'] = $this->config->get('config_fax');
        $data['config_open'] = $this->config->get('config_open');

        $data['layoutid'] = 1;
        $data['pages_link_url'] = 1;
        $data['search_block'] = 1;
        $data['cart_button'] = 1;
        $data['header_service_buttons'] = 1;
        $data['top_button'] = 1;
        $data['css_file'] = 0;
        $data['headertype'] = 1;
        $data['customitem_item_url1'] = 'index.php';
        $data['blog_link_status'] = 1;
        $data['blog_link_url'] = 'index.php?route=simple_blog/article';
        $data['pages_link_url'] = 'index.php';
        $data['pages_status'] = 1;
        $data['additional_page_checkout_status'] = 1;
        $data['additional_page_account_status'] = 1;
        $data['preloader'] = 1;
        $data['product_catalog_mode'] = 0;

        $data['theme'] = $this->config->get('config_theme');
        $data['store_id'] = $this->config->get('config_store_id');
        $data['langs'] = $this->config->get('config_language_id');

        $this->load->model('catalog/information');
        $this->load->model('catalog/category');

        $customisation_general = $this->config->get('customisation_general_store');
        $customisation_products = $this->config->get('customisation_products_store');
        $data['customisation_general'] = $this->config->get('customisation_general_store');
        $data['customisation_colors'] = $this->config->get('customisation_colors_store');
        $data['customisation_products'] = $this->config->get('customisation_products_store');
        $data['customisation_translation'] = $this->config->get('customisation_translation_store');

        $data['layout_id'] = $this->model_custom_general->getCurrentLayout();

        if (isset($customisation_general["headertype"][$store_id])) {
            if ($data['layout_id'] != 1 && $customisation_general["headertype"][$store_id] == 2) {
                $data['headertype'] = 1;
            } else {
                $data['headertype'] = $customisation_general["headertype"][$store_id];
            }
        }
        if (isset($customisation_general["layoutid"][$store_id])) {$data['layoutid'] = $customisation_general["layoutid"][$store_id];}
        if (isset($customisation_general["css_file"][$store_id])) {$data['css_file'] = $customisation_general["css_file"][$store_id];}
        if (isset($customisation_general["preloader"][$store_id])) {$data['preloader'] = $customisation_general["preloader"][$store_id];}
        if (isset($customisation_general["preloader_html"][$store_id])) {$data['preloader_html'] = html_entity_decode($customisation_general["preloader_html"][$store_id], ENT_QUOTES, 'UTF-8');}
        if (isset($customisation_general["top_button"][$store_id])) {$data['top_button'] = $customisation_general["top_button"][$store_id];}
        if (isset($customisation_general["pages_link_url"][$store_id])) {$data['pages_link_url'] = $customisation_general["pages_link_url"][$store_id];}
        if (isset($customisation_general["search_block"][$store_id])) {$data['search_block'] = $customisation_general["search_block"][$store_id];}
        if (isset($customisation_general["cart_button"][$store_id])) {$data['cart_button'] = $customisation_general["cart_button"][$store_id];}
        if (isset($customisation_general["header_service_buttons"][$store_id])) {$data['header_service_buttons'] = $customisation_general["header_service_buttons"][$store_id];}
        if (isset($customisation_general["customitem_item_url1"][$store_id])) {$data['customitem_item_url1'] = $customisation_general["customitem_item_url1"][$store_id];}
        if (isset($customisation_general["blog_link_status"][$store_id])) {$data['blog_link_status'] = $customisation_general["blog_link_status"][$store_id];}
        if (isset($customisation_general["blog_link_url"][$store_id])) {$data['blog_link_url'] = $customisation_general["blog_link_url"][$store_id];}
        if (isset($customisation_general["pages_status"][$store_id])) {$data['pages_status'] = $customisation_general["pages_status"][$store_id];}
        if (isset($customisation_general["additional_page_checkout_status"][$store_id])) {$data['additional_page_checkout_status'] = $customisation_general["additional_page_checkout_status"][$store_id];}
        if (isset($customisation_general["additional_page_account_status"][$store_id])) {$data['additional_page_account_status'] = $customisation_general["additional_page_account_status"][$store_id];}
        if (isset($customisation_products["product_catalog_mode"][$store_id])) {$data['product_catalog_mode'] = $customisation_products["product_catalog_mode"][$store_id];}

        $data['informations'] = array();

        foreach ($this->model_catalog_information->getInformations() as $result) {
                $data['informations'][] = array(
                    'title' => $result['title'],
                    'information_id' => $result['information_id'],
                    'href'  => $this->url->link('information/information', 'information_id=' . $result['information_id'])
                );
        }


        $data['logo_transparent'] = $this->model_custom_general->getLogoTransparent();


        $data['css'] = $this->load->controller('common/css');
        $data['top_slider'] = $this->load->controller('common/top_slider');
        $data['search_mobile'] = $this->load->controller('common/search_mobile');
        /***end theme's changes***/

                    ]]></add>
        </operation>


        <!--changes for Blog-->
        <operation>
            <search><![CDATA[$categories = $this->model_catalog_category->getCategories(0);]]></search>
            <add position="after"><![CDATA[
/***blog changes***/
				if(isset($this->request->get['route'])) {
					$route = $this->request->get['route'];
				} else {
					$route = 'common/home';
				}

				$route = explode("/", $route);

				if($this->config->get('simple_blog_status')) {
    				$this->load->model('simple_blog/article');

    				$count_blog_categories = $this->model_simple_blog_article->getTotalCategories(0);
                }

				if (isset($count_blog_categories) && $this->config->get('simple_blog_display_category') && $this->config->get('simple_blog_status')) {

					$categories = $this->model_simple_blog_article->getCategories(0);

					foreach ($categories as $category) {
						if ($category['top']) {
							// Level 2
							$children_data = array();

							$children = $this->model_simple_blog_article->getCategories($category['simple_blog_category_id']);

							foreach ($children as $child) {

								$article_total = $this->model_simple_blog_article->getTotalArticles($child['simple_blog_category_id']);
                                if ($child['image']) {
                                    $this->load->model('tool/image');

                                    $image = $this->model_tool_image->resize($child['image'], 205, 130);
                                } else {
                                    $image = false;
                                }

								$children_data[] = array(
                                    'image'  => $image,
								    'external_link' => $child['external_link'],
									'name'  => $child['name'],
									'href'  => $this->url->link('simple_blog/category', 'simple_blog_category_id=' . $category['simple_blog_category_id'] . '_' . $child['simple_blog_category_id'])
								);
							}

							$menu_class = 'simple_blog';

							// Level 1
							$data['categories'][] = array(
								'name'     => $category['name'],
								'external_link' => $category['external_link'],
								'children' => $children_data,
								'menu_class' => $menu_class,

                                'category_class' => $this->model_custom_general->getBlogCatClass($children_data),

								'column'   => $category['blog_category_column'] ? $category['blog_category_column'] : 1,
								'href'     => $this->url->link('simple_blog/category', 'simple_blog_category_id=' . $category['simple_blog_category_id'])
							);
						}
					}

				}
				$categories = $this->model_catalog_category->getCategories(0);
/***end blog changes***/
			]]></add>
        </operation>

    </file>
    <file path="catalog/controller/common/footer.php">
        <operation>
            <search><![CDATA[return $this->load->view('common/footer', $data); ]]></search>
            <add position="before"><![CDATA[
            /***theme's changes***/
            $data['theme'] = $this->config->get('config_theme');
            $data['store_id'] = $this->config->get('config_store_id');
            $data['langs'] = $this->config->get('config_language_id');

            $store_id = $this->config->get('config_store_id');
            $langs = $this->config->get('config_language_id');

            $this->load->model('catalog/information');
            $this->load->model('custom/general');
            $this->load->model('catalog/category');

            $customisation_general = $this->config->get('customisation_general_store');
            $customisation_translation = $this->config->get('customisation_translation_store');

            $data['layout_id'] = $this->model_custom_general->getCurrentLayout();
            $layout_id = $this->model_custom_general->getCurrentLayout();

            /*variables from customisation module*/
            $data['layoutid'] = 1;
            $data['footercopyright'] = '';
            $data['socials'] = '';
            $data['customblock_status'] = 1;
            $data['newsletter_status'] = 1;
            $data['payments'] = '';
            $data['map'] = '';
            $data['top_button'] = '';
            $data['menu_back'] = '';
            $data['customblock_html'] = '';
            $data['custom_html_title'] = '';
            $data['socials_status'] = 1;

            $data['apikey'] = 'test';
            $data['list_unique_id'] = 'test';
            $data['newsletter_status'] = 1;

            $layout_type_footer = 1;
            $data['layout_type_footer'] = 1;

            if (isset($customisation_general["footertype"][$store_id])) {
                $layout_type_footer = $customisation_general["footertype"][$store_id];
                $data['layout_type_footer'] = $customisation_general["footertype"][$store_id];
            }

            if ($layout_id != 1 && $layout_type_footer == 4) {$layout_type_footer = 1;}

            $footer_class = 0;

            switch ($layout_type_footer) {
                case 1:
                    $footer_class = '';
                    break;
                case 2:
                    $footer_class = 0;
                    break;
                case 3:
                    $footer_class = 1;
                    break;
                case 4:
                    $footer_class = 2;
                    break;
                case 5:
                    $footer_class = 3;
                    break;
                case 6:
                    $footer_class = 4;
                    break;
                case 7:
                    $footer_class = 5;
                    break;
                case 8:
                    $footer_class = 6;
                    break;
            }
            $data['footer_class'] = $footer_class;

            if (isset($customisation_general["apikey"][$store_id])) {$data['your_apikey'] = $customisation_general["apikey"][$store_id];} else {$data['your_apikey'] = '';}
            if (isset($customisation_general["list_unique_id"][$store_id])) {$data['my_list_unique_id'] = $customisation_general["list_unique_id"][$store_id];} else {$data['my_list_unique_id'] = '';}
            if (isset($customisation_general[$langs]["newsletter_title"][$store_id])) {$data['newsletter_title'] = $customisation_general[$langs]["newsletter_title"][$store_id];} else {$data['newsletter_title'] = '';}
            if (isset($customisation_general[$langs]["newsletter_placeholder"][$store_id])) {$data['newsletter_placeholder'] = ($layout_type_footer == 5 || $layout_type_footer == 6 || $layout_type_footer == 7 ? $customisation_general[$langs]["newsletter_placeholder"][$store_id] : '');} else {$data['newsletter_placeholder'] = '';}
            if (isset($customisation_general[$langs]["newsletter_button"][$store_id])) {$data['newsletter_button'] = $customisation_general[$langs]["newsletter_button"][$store_id];} else {$data['newsletter_button'] = '';}
            if (isset($customisation_general["layoutid"][$store_id])) {$data['layoutid'] = $customisation_general["layoutid"][$store_id];}
            $data['footercopyright'] = (isset($customisation_general["footercopyright"][$store_id]) && is_string($customisation_general["footercopyright"][$store_id]) ? html_entity_decode($customisation_general["footercopyright"][$store_id], ENT_QUOTES, 'UTF-8') : $data['powered']);
            $data['payments'] = (isset($customisation_general["payments"][$store_id]) && is_string($customisation_general["payments"][$store_id]) ? html_entity_decode($customisation_general["payments"][$store_id], ENT_QUOTES, 'UTF-8') : '');
            $data['map'] = (isset($customisation_general["map"][$store_id]) && $customisation_general["map"][$store_id] != 0 && isset($customisation_general["map_html"][$store_id])  ? html_entity_decode($customisation_general["map_html"][$store_id], ENT_QUOTES, 'UTF-8') : '');
            $data['socials'] = (isset($customisation_general["socials"][$store_id]) && is_string($customisation_general["socials"][$store_id]) ? html_entity_decode($customisation_general["socials"][$store_id], ENT_QUOTES, 'UTF-8') : '');
            $data['customblock_html'] = isset($customisation_general[$langs]["customblock_html"][$store_id]) ? html_entity_decode($customisation_general[$langs]["customblock_html"][$store_id], ENT_QUOTES, 'UTF-8') : '';
            $data['custom_html_title'] = $customisation_general[$langs]["custom_html_title"][$store_id];
            if (isset($customisation_general["customblock_status"][$store_id])) {$data['customblock_status'] = $customisation_general["customblock_status"][$store_id];}
            if (isset($customisation_general["newsletter_status"][$store_id])) {$data['newsletter_status'] = $customisation_general["newsletter_status"][$store_id];}
            if (isset($customisation_general["top_button"][$store_id])) {$data['top_button'] = $customisation_general["top_button"][$store_id];}
            if (isset($customisation_general["socials_status"][$store_id])) {$data['socials_status'] = $customisation_general["socials_status"][$store_id];}
            $data['menu_back'] = isset($customisation_translation[$langs]["menu_back"][$store_id]) ? $customisation_translation[$langs]["menu_back"][$store_id] : 'back';
            $data['config_address'] = $this->config->get('config_address');
            $data['config_telephone'] = $this->config->get('config_telephone');
            $data['config_open'] = $this->config->get('config_open');
            $data['config_email'] = $this->config->get('config_email');
            $data['config_image'] = $this->config->get('config_image');

            $data['newsletter_block'] = $this->model_custom_general->getNewsletterBlock($data['newsletter_title'],$data['your_apikey'],$data['my_list_unique_id'],$data['newsletter_button'],$data['newsletter_placeholder']);
            /***end theme's changes***/

                    ]]></add>
        </operation>

    </file>
    <file path="catalog/controller/common/home.php">
        <operation>
            <search><![CDATA[$this->response->setOutput($this->load->view('common/home', $data)); ]]></search>
            <add position="before"><![CDATA[
            /***theme's changes***/
            $langs = $this->config->get('config_language_id');
            $store_id = $this->config->get('config_store_id');

            $data['layoutid'] = 1;
            $data['newsletter_popup_status'] = 0;
            $data['newsletter_placeholder'] = 0;
            $data['apikey'] = 'test';
            $data['list_unique_id'] = 'test';
            $data['newsletter_promo'] = '';
            $data['newsletter_button'] = '';
            $data['newsletter_close'] = '';


            $data['store_id'] = $this->config->get('config_store_id');
            $customisation_general = $this->config->get('customisation_general_store');
            $this->load->model('custom/general');

            $data['layout_id'] = $this->model_custom_general->getCurrentLayout();

            if (isset($customisation_general["layoutid"][$store_id])) {$data['layoutid'] = $customisation_general["layoutid"][$store_id];}
            if (isset($customisation_general["newsletter_popup_status"][$store_id])) {$data['newsletter_popup_status'] = $customisation_general["newsletter_popup_status"][$store_id];}

            $data['newsletter_placeholder'] = (isset($customisation_general[$langs]["newsletter_placeholder"][$store_id]) ? $customisation_general[$langs]["newsletter_placeholder"][$store_id] : 'Your E-mail...');
            $data['newsletter_promo'] = html_entity_decode($customisation_general[$langs]["newsletter_promo"][$store_id], ENT_QUOTES, 'UTF-8');
            $data['newsletter_button'] = isset($customisation_general[$langs]["newsletter_button"][$store_id]) ? $customisation_general[$langs]["newsletter_button"][$store_id] : 'subscribe';
            $data['newsletter_close'] = $customisation_general[$langs]["newsletter_close"][$store_id];

            $data['config_logo'] = $this->config->get('config_logo');
            $data['config_name'] = $this->config->get('config_name');

            $data['boxed'] = $this->load->controller('common/boxed');
            $data['left_home'] = $this->load->controller('common/left_home');
            $data['left_home2'] = $this->load->controller('common/left_home2');
            $data['right_home'] = $this->load->controller('common/right_home');
            $data['right_home2'] = $this->load->controller('common/right_home2');
            $data['promo'] = $this->load->controller('common/promo');
            /***end theme's changes***/
                    ]]></add>
        </operation>

    </file>
    <file path="catalog/controller/common/cart.php">
        <operation>
            <search><![CDATA[ return $this->load->view('common/cart', $data); ]]></search>
            <add position="before"><![CDATA[
        /***theme's changes***/
        $data['store_id'] = $this->config->get('config_store_id');
        $data['lang'] = $this->config->get('config_language_id');
        $data['customisation_translation'] = $this->config->get('customisation_translation_store');
            $data['customisation_general'] = $this->config->get('customisation_general_store');
        /***end theme's changes***/
                    ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/common/search.php">
        <operation>
            <search><![CDATA[return $this->load->view('common/search', $data); ]]></search>
            <add position="before"><![CDATA[
            /***theme's changes***/
            $data['store_id'] = $this->config->get('config_store_id');
            $data['customisation_general'] = $this->config->get('customisation_general_store');
            /***end theme's changes***/
                    ]]></add>
        </operation>

    </file>
    <file path="catalog/controller/common/currency.php">
        <operation>
            <search><![CDATA[ return $this->load->view('common/currency', $data);]]></search>
            <add position="before"><![CDATA[
            /***theme's changes***/
            $data['store_id'] = $this->config->get('config_store_id');
            $data['customisation_general'] = $this->config->get('customisation_general_store');
            /***end theme's changes***/
                    ]]></add>
        </operation>

    </file>
    <file path="catalog/controller/common/language.php">
        <operation>
            <search><![CDATA[ return $this->load->view('common/language', $data);]]></search>
            <add position="before"><![CDATA[
            /***theme's changes***/
            $data['store_id'] = $this->config->get('config_store_id');
            $data['customisation_general'] = $this->config->get('customisation_general_store');
            /***end theme's changes***/
                    ]]></add>
        </operation>

    </file>
    <file path="catalog/controller/common/column_left.php">
        <operation>
            <search><![CDATA[return $this->load->view('common/column_left', $data); ]]></search>
            <add position="before"><![CDATA[
            /***theme's changes***/
            $data['store_id'] = $this->config->get('config_store_id');
            $data['lang'] = $this->config->get('config_language_id');
            $data['customisation_translation'] = $this->config->get('customisation_translation_store');
            /***end theme's changes***/
                    ]]></add>
        </operation>

    </file>
    <!--end catalog/controller/common-->

    <!--catalog/controller/information-->
    <file path="catalog/controller/information/contact.php">
        <operation>
            <search><![CDATA[public function index() {]]></search>
            <add position="after"><![CDATA[
            /***theme's changes***/
            $data['config_email'] = $this->config->get('config_email');
            $data['top_slider'] = $this->load->controller('common/top_slider');
            /***end theme's changes***/
        ]]></add>
        </operation>

    </file>

    <!--catalog/controller/extension/module-->
    <file path="catalog/controller/extension/module/featured.php">
        <operation>
            <search><![CDATA[$data['products'][] = array( ]]></search>
            <add position="before"><![CDATA[
/***theme's changes***/
                    $data['store_id'] = $this->config->get('config_store_id');
                    $data['lang'] = $this->config->get('config_language_id');
                    $lang = $this->config->get('config_language_id');
                    $store_id = $this->config->get('config_store_id');
                    $this->load->model('custom/general');

                    $data['customisation_slider'] = $this->config->get('customisation_slider_store');
                    $data['customisation_general'] = $this->config->get('customisation_general_store');
                    $data['customisation_products'] = $this->config->get('customisation_products_store');
                    $data['customisation_translation'] = $this->config->get('customisation_translation_store');

                    $data['images'] = array();

                    if ($product_info['image']) {
                        $image_quickview = $this->model_tool_image->resize($product_info['image'],$this->config->get($this->config->get('config_theme') . '_image_quickview_width'), $this->config->get($this->config->get('config_theme') . '_image_quickview_height'));
                    } else {
                        $image_quickview = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_quickview_width'), $this->config->get($this->config->get('config_theme') . '_image_quickview_height'));
                    }
                    if ((float)$product_info['special']) {
                        $discount = '-'.round((($product_info['price'] - $product_info['special'])/$product_info['price'])*100, 0).'%';
                    } else {
                        $discount = false;
                    }

                    $data['additional_images1'] = array();
                    $results_images = $this->model_catalog_product->getProductImages($product_info['product_id']);

                    if ($results_images) {
                        foreach ($results_images as $results_image) {
                            $data['additional_images1'][] = array(
                                'image' => $this->model_tool_image->resize($results_image['image'], $this->config->get($this->config->get('config_theme') . '_image_product_width'), $this->config->get($this->config->get('config_theme') . '_image_product_height')),
                                'image2x' => $this->model_tool_image->resize($results_image['image'], $this->config->get($this->config->get('config_theme') . '_image_product_width')*2, $this->config->get($this->config->get('config_theme') . '_image_product_height')*2)
                            );
                        }
                    } else {
                        $data['additional_images1'] = false;
                    }


                    if ($product_info['manufacturer']) {
                        $brand_logo_path = $this->model_custom_general->getManufacturerImage($product_info['manufacturer_id']);
                        $brand_logo = $this->model_tool_image->resize($brand_logo_path, $this->config->get($this->config->get('config_theme') . '_image_brand_width'), $this->config->get($this->config->get('config_theme') . '_image_brand_height'));
                        $brand = urlencode($brand_logo);
                    } else {
                        $brand = '';
                    }

                    $stock_text = isset($customisation_translation[$lang]["text_instock"][$store_id]) && $customisation_translation[$lang]["text_instock"][$store_id] != '' ? $customisation_translation[$lang]["text_instock"][$store_id] : 'In stock';

                    if ($product_info['quantity'] <= 0) {
                        $stock = $product_info['stock_status'];
                    } elseif ($this->config->get('config_stock_display')) {
                        $stock = $product_info['quantity'];
                    } else {
                        $stock = $stock_text;
                    }

                    $data['lookbook'] = $this->load->controller('common/lookbook');
                    /***end theme's changes***/
                    ]]></add>
        </operation>
        <operation>
            <search><![CDATA[ 'product_id'  => $product_info['product_id'],]]></search>
            <add position="after"><![CDATA[
                        /***theme's changes***/
                        'width_settings'       => $setting['width'],
                        'height_settings'       => $setting['height'],
                        'short_description'       => $this->model_custom_general->getProductOption($product_info['product_id'],'short_description',1),
                        'quantity'  => $product_info['quantity'],
                        'stock_status'  => $product_info['stock_status'],
                        'brand'  => $brand,
                        'image_quickview'  => $image_quickview,
                        'special_end_date'  => $this->model_custom_general->getDateEnd($product_info['product_id']),
                        'stock'  => urlencode($stock),
                        'date_available'  => $product_info['date_available'],
                        'discount'  => $discount,
                        'additional_images'  => $data['additional_images1'],

                        /***end theme's changes***/

                    ]]></add>
        </operation>

    </file>
    <file path="catalog/controller/extension/module/bestseller.php|catalog/controller/extension/module/special.php|catalog/controller/extension/module/latest.php">
        <operation>
            <search><![CDATA[$data['products'][] = array( ]]></search>
            <add position="before"><![CDATA[
/***theme's changes***/
                $data['store_id'] = $this->config->get('config_store_id');
                $data['lang'] = $this->config->get('config_language_id');
                $lang = $this->config->get('config_language_id');
                $store_id = $this->config->get('config_store_id');
                $this->load->model('tool/image');
                $this->load->model('custom/general');

                $data['customisation_slider'] = $this->config->get('customisation_slider_store');
                $data['customisation_general'] = $this->config->get('customisation_general_store');
                $data['customisation_products'] = $this->config->get('customisation_products_store');
                $data['customisation_translation'] = $this->config->get('customisation_translation_store');

                $data['images'] = array();

                if ($result['image']) {
                    $image_quickview = $this->model_tool_image->resize($result['image'],$this->config->get($this->config->get('config_theme') . '_image_quickview_width'), $this->config->get($this->config->get('config_theme') . '_image_quickview_height'));
                } else {
                    $image_quickview = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_quickview_width'), $this->config->get($this->config->get('config_theme') . '_image_quickview_height'));
                }
                if ((float)$result['special']) {
                    $discount = '-'.round((($result['price'] - $result['special'])/$result['price'])*100, 0).'%';
                } else {
                    $discount = false;
                }

                $data['additional_images1'] = array();
                $results_images = $this->model_catalog_product->getProductImages($result['product_id']);

                    if ($results_images) {
                        foreach ($results_images as $results_image) {
                            $data['additional_images1'][] = array(
                                'image' => $this->model_tool_image->resize($results_image['image'], $this->config->get($this->config->get('config_theme') . '_image_product_width'), $this->config->get($this->config->get('config_theme') . '_image_product_height')),
                                'image2x' => $this->model_tool_image->resize($results_image['image'], $this->config->get($this->config->get('config_theme') . '_image_product_width')*2, $this->config->get($this->config->get('config_theme') . '_image_product_height')*2)
                            );
                        }
                    } else {
                        $data['additional_images1'] = false;
                    }

                if ($result['manufacturer']) {
                    $brand_logo_path = $this->model_custom_general->getManufacturerImage($result['manufacturer_id']);
                    $brand_logo = $this->model_tool_image->resize($brand_logo_path, $this->config->get($this->config->get('config_theme') . '_image_brand_width'), $this->config->get($this->config->get('config_theme') . '_image_brand_height'));
                    $brand = urlencode($brand_logo);
                } else {
                    $brand = '';
                }

                $stock_text = isset($customisation_translation[$lang]["text_instock"][$store_id]) && $customisation_translation[$lang]["text_instock"][$store_id] != '' ? $customisation_translation[$lang]["text_instock"][$store_id] : 'In stock';

                if ($result['quantity'] <= 0) {
                    $stock = $result['stock_status'];
                } elseif ($this->config->get('config_stock_display')) {
                    $stock = $result['quantity'];
                } else {
                    $stock = $stock_text;
                }

                $data['lookbook'] = $this->load->controller('common/lookbook');
                /***end theme's changes***/
                    ]]></add>
        </operation>
        <operation>
            <search><![CDATA[ 'product_id'  => $result['product_id'],]]></search>
            <add position="after"><![CDATA[
                    /***theme's changes***/
                    'width_settings'       => $setting['width'],
                    'height_settings'       => $setting['height'],
                    'short_description'       => $this->model_custom_general->getProductOption($result['product_id'],'short_description',1),
                    'quantity'  => $result['quantity'],
                    'stock_status'  => $result['stock_status'],
                    'brand'  => $brand,
                    'image_quickview'  => $image_quickview,
                    'special_end_date'  => $this->model_custom_general->getDateEnd($result['product_id']),
                    'stock'  => urlencode($stock),
                    'date_available'  => $result['date_available'],
                    'discount'  => $discount,
                    'additional_images'  => $data['additional_images1'],

                    /***end theme's changes***/

                    ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/carousel.php">
        <operation>
            <search><![CDATA[$data['banners'] = array() ]]></search>
            <add position="before"><![CDATA[
        /***theme's changes***/
        $data['store_id'] = $this->config->get('config_store_id');
        $data['lang'] = $this->config->get('config_language_id');
        $data['customisation_general'] = $this->config->get('customisation_general_store');
        $store_id = $this->config->get('config_store_id');
        if (isset($customisation_general["layoutid"][$store_id])) {$data['layoutid'] = $customisation_general["layoutid"][$store_id];} else {$data['layoutid'] = 1;}
        /***end theme's changes***/

                    ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $this->document->addStyle('catalog/view/javascript/jquery/owl-carousel/owl.carousel.css');
		    $this->document->addScript('catalog/view/javascript/jquery/owl-carousel/owl.carousel.min.js');
                    ]]></search>
            <add position="replace"><![CDATA[
            //$this->document->addStyle('catalog/view/javascript/jquery/owl-carousel/owl.carousel.css');
		    //$this->document->addScript('catalog/view/javascript/jquery/owl-carousel/owl.carousel.min.js');
                    ]]></add>
        </operation>

    </file>
    <file path="catalog/controller/extension/module/category.php">
        <operation>
            <search><![CDATA[$this->load->model('catalog/category'); ]]></search>
            <add position="before"><![CDATA[
        /***theme's changes***/
        if (isset($parts[2])) {
            $data['grandchild_id'] = $parts[2];
        } else {
            $data['grandchild_id'] = 0;
        }
        /***end theme's changes***/

             ]]></add>
        </operation>
        <operation>
            <search><![CDATA[ foreach($children as $child) {]]></search>
            <add position="after"><![CDATA[
                    /***theme's changes***/
                    $grandchildren_data = array();
                    $grandchildren = $this->model_catalog_category->getCategories($child['category_id']);
                    foreach ($grandchildren as $grandchild) {
                        $grandchildren_data[] = array(
                            'category_id' => $grandchild['category_id'],
                            'name'  => $grandchild['name'],
                            'href'  => $this->url->link('product/category', 'path=' . $category['category_id'] . '_' . $child['category_id'].'_'.$grandchild['category_id'])
                        );

                    }
                    /***end theme's changes***/
                    ]]></add>
        </operation>
        <operation>
            <search><![CDATA[ $children_data[] = array(]]></search>
            <add position="after"><![CDATA[
                        /***theme's changes***/
                        'grandchildren' => $grandchildren_data,
                        /***end theme's changes***/

                    ]]></add>
        </operation>
    </file>
    <!--end catalog/controller/extension/module-->

    <!--catalog/controller/product/-->
    <file path="catalog/controller/product/category.php">
        <operation>
            <search><![CDATA[$data['categories'][] = array( ]]></search>
            <add position="before"><![CDATA[
                /***theme's changes***/
                if ($result['image']) {
                    $image = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_category_width'), $this->config->get($this->config->get('config_theme') . '_image_category_height'));
                    $image2x = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_category_width')*2, $this->config->get($this->config->get('config_theme') . '_image_category_height')*2);
                } else {
                    $image = false;
                    $image2x = false;
                }
                /***end theme's changes***/

                    ]]></add>
        </operation>
        <operation>
            <search><![CDATA[ $data['categories'][] = array(]]></search>
            <add position="after"><![CDATA[
                    /***theme's changes***/
                    'image' => $image,
                    'image2x' => $image2x,
                    /***end theme's changes***/

                    ]]></add>
        </operation>
        <operation>
            <search><![CDATA[$data['products'][] = array( ]]></search>
            <add position="before"><![CDATA[
                /***theme's changes***/
                $data['store_id'] = $this->config->get('config_store_id');
                $data['lang'] = $this->config->get('config_language_id');

                $lang = $this->config->get('config_language_id');
                $store_id = $this->config->get('config_store_id');
                $this->load->model('tool/image');
                $this->load->model('custom/general');

                $data['customisation_slider'] = $this->config->get('customisation_slider_store');
                $data['customisation_general'] = $this->config->get('customisation_general_store');
                $data['customisation_products'] = $this->config->get('customisation_products_store');
                $data['customisation_translation'] = $this->config->get('customisation_translation_store');

                $data['images'] = array();

                if ($result['image']) {
                    $image_quickview = $this->model_tool_image->resize($result['image'],$this->config->get($this->config->get('config_theme') . '_image_quickview_width'), $this->config->get($this->config->get('config_theme') . '_image_quickview_height'));
                } else {
                    $image_quickview = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_quickview_width'), $this->config->get($this->config->get('config_theme') . '_image_quickview_height'));
                }
                if ((float)$result['special']) {
                    $discount = '-'.round((($result['price'] - $result['special'])/$result['price'])*100, 0).'%';
                } else {
                    $discount = false;
                }

                $data['additional_images1'] = array();
                $results_images = $this->model_catalog_product->getProductImages($result['product_id']);

                if ($results_images) {
                      foreach ($results_images as $results_image) {
                            $data['additional_images1'][] = array(
                                'image' => $this->model_tool_image->resize($results_image['image'], $this->config->get($this->config->get('config_theme') . '_image_product_width'), $this->config->get($this->config->get('config_theme') . '_image_product_height')),
                                'image2x' => $this->model_tool_image->resize($results_image['image'], $this->config->get($this->config->get('config_theme') . '_image_product_width')*2, $this->config->get($this->config->get('config_theme') . '_image_product_height')*2)
                            );
                      }
                } else {
                      $data['additional_images1'] = false;
                }


                if ($result['manufacturer']) {
                    $brand_logo_path = $this->model_custom_general->getManufacturerImage($result['manufacturer_id']);
                    $brand_logo = $this->model_tool_image->resize($brand_logo_path, $this->config->get($this->config->get('config_theme') . '_image_brand_width'), $this->config->get($this->config->get('config_theme') . '_image_brand_height'));
                    $brand = urlencode($brand_logo);
                } else {
                    $brand = '';
                }

                $stock_text = isset($customisation_translation[$lang]["text_instock"][$store_id]) && $customisation_translation[$lang]["text_instock"][$store_id] != '' ? $customisation_translation[$lang]["text_instock"][$store_id] : 'In stock';

                if ($result['quantity'] <= 0) {
                    $stock = $result['stock_status'];
                } elseif ($this->config->get('config_stock_display')) {
                    $stock = $result['quantity'];
                } else {
                    $stock = $stock_text;
                }
                /***end theme's changes***/

                    ]]></add>
        </operation>
        <operation>
            <search><![CDATA['product_id'  => $result['product_id'], ]]></search>
            <add position="after"><![CDATA[
                    /***theme's changes***/
                    'width_settings'       => $this->config->get($this->config->get('config_theme') . '_image_product_width'),
                    'height_settings'       => $this->config->get($this->config->get('config_theme') . '_image_product_height'),
                    'short_description'       => $this->model_custom_general->getProductOption($result['product_id'],'short_description',1),
                    'quantity'  => $result['quantity'],
                    'stock_status'  => $result['stock_status'],
                    'brand'  => $brand,
                    'image_quickview'  => $image_quickview,
                    'special_end_date'  => $this->model_custom_general->getDateEnd($result['product_id']),
                    'stock'  => urlencode($stock),
                    'date_available'  => $result['date_available'],
                    'discount'  => $discount,

                    'additional_images'  => $data['additional_images1'],

                    /***end theme's changes***/

                    ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/product/search.php|catalog/controller/product/special.php|catalog/controller/product/manufacturer.php">
        <operation>
            <search><![CDATA[$data['products'][] = array( ]]></search>
            <add position="before"><![CDATA[
                /***theme's changes***/
                $data['store_id'] = $this->config->get('config_store_id');
                $data['lang'] = $this->config->get('config_language_id');

                $lang = $this->config->get('config_language_id');
                $store_id = $this->config->get('config_store_id');
                $this->load->model('tool/image');
                $this->load->model('custom/general');

                $data['customisation_slider'] = $this->config->get('customisation_slider_store');
                $data['customisation_general'] = $this->config->get('customisation_general_store');
                $data['customisation_products'] = $this->config->get('customisation_products_store');
                $data['customisation_translation'] = $this->config->get('customisation_translation_store');

                $data['images'] = array();

                if ($result['image']) {
                    $image_quickview = $this->model_tool_image->resize($result['image'],$this->config->get($this->config->get('config_theme') . '_image_quickview_width'), $this->config->get($this->config->get('config_theme') . '_image_quickview_height'));
                } else {
                    $image_quickview = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_quickview_width'), $this->config->get($this->config->get('config_theme') . '_image_quickview_height'));
                }
                if ((float)$result['special']) {
                    $discount = '-'.round((($result['price'] - $result['special'])/$result['price'])*100, 0).'%';
                } else {
                    $discount = false;
                }

                $data['additional_images1'] = array();
                $results_images = $this->model_catalog_product->getProductImages($result['product_id']);

                  if ($results_images) {
                      foreach ($results_images as $results_image) {
                            $data['additional_images1'][] = array(
                                'image' => $this->model_tool_image->resize($results_image['image'], $this->config->get($this->config->get('config_theme') . '_image_product_width'), $this->config->get($this->config->get('config_theme') . '_image_product_height')),
                                'image2x' => $this->model_tool_image->resize($results_image['image'], $this->config->get($this->config->get('config_theme') . '_image_product_width')*2, $this->config->get($this->config->get('config_theme') . '_image_product_height')*2)
                            );
                      }
                    } else {
                        $data['additional_images1'] = false;
                    }


                if ($result['manufacturer']) {
                    $brand_logo_path = $this->model_custom_general->getManufacturerImage($result['manufacturer_id']);
                    $brand_logo = $this->model_tool_image->resize($brand_logo_path, $this->config->get($this->config->get('config_theme') . '_image_brand_width'), $this->config->get($this->config->get('config_theme') . '_image_brand_height'));
                    $brand = urlencode($brand_logo);
                } else {
                    $brand = '';
                }

                $stock_text = isset($customisation_translation[$lang]["text_instock"][$store_id]) && $customisation_translation[$lang]["text_instock"][$store_id] != '' ? $customisation_translation[$lang]["text_instock"][$store_id] : 'In stock';

                if ($result['quantity'] <= 0) {
                    $stock = $result['stock_status'];
                } elseif ($this->config->get('config_stock_display')) {
                    $stock = $result['quantity'];
                } else {
                    $stock = $stock_text;
                }
                /***end theme's changes***/

                    ]]></add>
        </operation>
        <operation>
            <search><![CDATA['product_id'  => $result['product_id'], ]]></search>
            <add position="after"><![CDATA[
                    /***theme's changes***/
                    'width_settings'       => $this->config->get($this->config->get('config_theme') . '_image_product_width'),
                    'height_settings'       => $this->config->get($this->config->get('config_theme') . '_image_product_height'),
                    'short_description'       => $this->model_custom_general->getProductOption($result['product_id'],'short_description',1),
                    'quantity'  => $result['quantity'],
                    'stock_status'  => $result['stock_status'],
                    'brand'  => $brand,
                    'image_quickview'  => $image_quickview,
                    'special_end_date'  => $this->model_custom_general->getDateEnd($result['product_id']),
                    'stock'  => urlencode($stock),
                    'date_available'  => $result['date_available'],
                    'discount'  => $discount,

                    'additional_images'  => $data['additional_images1'],

                    /***end theme's changes***/

                    ]]></add>
        </operation>

    </file>
    <file path="catalog/controller/product/product.php">
        <operation>
            <search><![CDATA[if ($product_info) { ]]></search>
            <add position="after"><![CDATA[
            /***theme's changes***/
            $data['store_id'] = $this->config->get('config_store_id');
            $data['lang'] = $this->config->get('config_language_id');
            $this->load->model('custom/general');
            $data['customisation_products'] = $this->config->get('customisation_products_store');
            $data['customisation_translation'] = $this->config->get('customisation_translation_store');

            $data['youtube_link'] = $this->model_custom_general->getProductOption($product_id, 'video1');
            $data['short_descr'] = $this->model_custom_general->getProductOption($product_id, 'short_description', '1');

            $data['tab_title'] = $this->model_custom_general->getProductOption($product_id, 'tab_title');
            $data['html_product_tab'] = $this->model_custom_general->getProductOption($product_id, 'html_product_tab', '1');
            $data['custom_right_block'] = $this->model_custom_general->getProductOption($product_id, 'html_product_right', '1');
            $data['image_size'] = $this->model_custom_general->getOptionProductTable($product_id, 'mainsize');

            $data['manufacturer_image'] = $this->model_custom_general->getManufacturerImageProductPage($product_info['manufacturer_id']);
            $data['special_end_date'] = $this->model_custom_general->getDateEnd($product_id);

            $data['quantity'] = $product_info['quantity'];

            if (($this->customer->isLogged() || !$this->config->get('config_customer_price')) && (float)$product_info['special']) {
                $data['d_procent'] = round((($product_info['price'] - $product_info['special'])/$product_info['price'])*100, 0);
            } else {
                $data['d_procent'] = false;
            }

            /***end theme's changes***/

                    ]]></add>
        </operation>

    </file>
    <!--end catalog/controller/product/-->

    <!--//catalog changes-->

    <!--Russian language changes-->
    <file path="catalog/language/ru-ru/common/cart.php">
        <operation>
            <search><![CDATA[$_['text_recurring']]]></search>
            <add position="before"><![CDATA[$_['text_items']     = '%s Товар(ов) - %s';]]></add>
        </operation>
    </file>
    <file path="catalog/language/ru-ru/checkout/cart.php">
        <operation>
            <search><![CDATA[$_['text_points']]]></search>
            <add position="after"><![CDATA[$_['text_items']     = '%s Товар(ов) - %s';]]></add>
        </operation>
    </file>


</modification>